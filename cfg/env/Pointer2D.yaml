env_name: "Pointer2D"
num_envs: 1024

goal_lim: 10
goal_vel_lim: 5
vel_lim: 5

dim: 2
episode_max_step: 500
total_episodes: 25
max_episode_length: 500
# reward:
#   success: 
#     coeff": 1
# success_threshold: [1, 1, 1, 1]  # pos[m], vel[m/s], ang[rad], angvel[rad/s]
log_interval: 5

mode: "train" # train or test

eval: True
eval_interval: 2
eval_episodes: 1
save_model: False  # save model after evaluation
render: False  # render env
record: False  # dump config, record video only works if env is rendered
log_path: "logs/"  # config, video, model log path

task:
  rand_weights:       True
  rand_vel_targets:   True

  proximity_threshold: 2

  # targets for play
  target_pos:     [0, 0, 2] # x, y
  target_vel:     [0, 0, 0] # vx, vy, vz
  target_ang:     [0, 0, 0] # rpy
  target_angvel:  [0, 0, 0] # wx, wy, wz

  task_w:      [1, 0, 0.2, 0.5, 0.0]  # |px|, |py|, |v|, |ang|, |angvel|
  task_w_eval: [0, 0, 0, 1, 0]

  # can be "uniform", "permute", "identity", "achievable", "single"
  task_w_randType: "achievable"
  task_w_randAdaptive: True
  # set of achievable task weights
  task_wa:   [[1,0,0,0,0],
              [0,1,0,0,0],
              [0,0,1,0,0],
              [0,0,0,1,0],
              [0,0,0,0,1],
              [1,1,0,0,0],
              [1,1,0,1,0],
              [1,1,0,0,1],
              [0,0,1,1,0],
              [0,0,1,0,1]]

  # task_wa: [[1,0,0,0,0],
  #           [0,0,1,0,0],
  #           [0,0,0,1,0],
  #           [0,0,0,0,1],
  #           [1,0,1,0,0],
  #           [1,0,1,1,0],
  #           [1,0,0,1,0],
  #           [1,0,0,0,1],
  #           [0,0,1,1,0],
  #           [0,0,1,0,1],
  #           [0,1,0,0,0],
  #           [0,0,1,0,0],
  #           [0,0,0,1,0],
  #           [0,0,0,0,1],
  #           [0,1,1,0,0],
  #           [0,1,1,1,0],
  #           [0,1,0,1,0],
  #           [0,1,0,0,1],
  #           [0,0,1,1,0],
  #           [0,0,1,0,1],
  #           [1,1,0,0,0],
  #           [0,0,1,0,0],
  #           [0,0,0,1,0],
  #           [0,0,0,0,1],
  #           [1,1,1,0,0],
  #           [1,1,1,1,0],
  #           [1,1,0,1,0],
  #           [1,1,0,0,1],
  #           [0,0,1,1,0],
  #           [0,0,1,0,1]]

  task_ws: [[1,1,0,0,0]]

feature:
  pos_index: 3    # pos start index in obs space
  type: "regular"
  regular: [True, True, True, True, True]

  
sim:
  sim_device: "cuda:0"
  headless: True
  compute_device_id: 0
  graphics_device_id: 0